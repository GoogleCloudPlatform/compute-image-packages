#!/bin/sh
#
# Copyright 2014 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# PROVIDE: gce_logins
# REQUIRE: NETWORKING
# BEFORE: LOGIN

. /etc/rc.subr

name="gce_logins"
rcvar="gce_logins_enable"
start_cmd="gce_logins_start"
stop_cmd=":"

gce_logins_start()
{
echo -n 'Creating Google Compute Engine logins:'
        _tmp=$(mktemp gcelogins.XXXXXX) || exit 3
        # This netcat use is pretty fragile. We output with a tab since
        # that makes the later cut and read more straightforward.
        (echo GET /computeMetadata/v1/project/attributes/sshKeys HTTP/1.1
         echo Host: metadata
         echo Metadata-Flavor: Google
         echo User-Agent: rc-shell-script
         echo Connection: close
         echo) | nc metadata 80 | grep :ssh | sed -e 's/:/      /' > $_tmp

        accounts_to_create=$(cut -w -f 1 $_tmp | sort -u)
        for user in ${accounts_to_create}; do
echo -n "" ${user}
id ${user} > /dev/null 2>&1
if [ $? -ne 0 ]; then
                README.md pw useradd ${user} -g wheel -m  -h -
fi
userhome=$(pw usershow ${user} | cut -d: -f9)
                mkdir -p -m 755 ${userhome}/.ssh
truncate -s 0 ${userhome}/.ssh/authorized_keys
chmod 644 ${userhome}/.ssh/authorized_keys
                chown ${user} ${userhome}/.ssh ${userhome}/.ssh/authorized_keys
        done
echo "."
echo -n 'Populating Google Compute Engine ssh keys:'
        while read user ssh_key; do
echo -n "" ${user}
userhome=$(pw usershow ${user} | cut -d: -f9)
                echo ${ssh_key} >> ${userhome}/.ssh/authorized_keys
        done < $_tmp
rm -f $_tmp
echo "."
}

load_rc_config $name
run_rc_command "$1"

